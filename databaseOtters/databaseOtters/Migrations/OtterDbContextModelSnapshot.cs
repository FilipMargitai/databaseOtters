// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using databaseOtters.Model;

namespace databaseOtters.Migrations
{
    [DbContext(typeof(OtterDbContext))]
    partial class OtterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("databaseOtters.Model.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Area")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationID = 111,
                            Area = 33233f,
                            Name = "NP Šumava"
                        },
                        new
                        {
                            LocationID = 128,
                            Area = 13165f,
                            Name = "CHKO Jizerské hory"
                        },
                        new
                        {
                            LocationID = 666,
                            Area = 15432f,
                            Name = "CHKO Čeký Les"
                        });
                });

            modelBuilder.Entity("databaseOtters.Model.Otter", b =>
                {
                    b.Property<int?>("TattooID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("MotherId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TattooID");

                    b.HasIndex("MotherId");

                    b.HasIndex("PlaceName", "LocationId");

                    b.ToTable("Otters");

                    b.HasData(
                        new
                        {
                            TattooID = 1,
                            Color = "hnědá jako hodně",
                            LocationId = 111,
                            Name = "Velká Máti",
                            PlaceName = "U Studánky"
                        },
                        new
                        {
                            TattooID = 2,
                            Color = "Hnědá taky",
                            LocationId = 111,
                            MotherId = 1,
                            Name = "První Dcera",
                            PlaceName = "U Studánky"
                        },
                        new
                        {
                            TattooID = 3,
                            Color = "Hnědá trochu",
                            LocationId = 128,
                            MotherId = 1,
                            Name = "ZBloudilka",
                            PlaceName = "Černé Jezero"
                        });
                });

            modelBuilder.Entity("databaseOtters.Model.Place", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Name", "LocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            Name = "U Studánky",
                            LocationId = 111
                        },
                        new
                        {
                            Name = "U Buku",
                            LocationId = 111
                        },
                        new
                        {
                            Name = "Černé Jezero",
                            LocationId = 128
                        },
                        new
                        {
                            Name = "U Studánky",
                            LocationId = 128
                        },
                        new
                        {
                            Name = "Na Čihadlech",
                            LocationId = 128
                        },
                        new
                        {
                            Name = "U Studánky",
                            LocationId = 666
                        },
                        new
                        {
                            Name = "Český Pařez",
                            LocationId = 666
                        });
                });

            modelBuilder.Entity("databaseOtters.Model.Otter", b =>
                {
                    b.HasOne("databaseOtters.Model.Otter", "Mother")
                        .WithMany("Children")
                        .HasForeignKey("MotherId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("databaseOtters.Model.Place", "Place")
                        .WithMany("Otters")
                        .HasForeignKey("PlaceName", "LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("databaseOtters.Model.Place", b =>
                {
                    b.HasOne("databaseOtters.Model.Location", "Location")
                        .WithMany("Places")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
